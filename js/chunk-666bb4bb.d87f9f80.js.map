{"version":3,"sources":["webpack:///./src/views/lottery-template/bingo-optional-template/bingo-optional-template.vue?0506","webpack:///./src/views/credit/mixins/keno_mixin.js","webpack:///src/views/lottery-template/bingo-optional-template/bingo-optional-template.vue","webpack:///./src/views/lottery-template/bingo-optional-template/bingo-optional-template.vue?fffa","webpack:///./src/views/lottery-template/bingo-optional-template/bingo-optional-template.vue","webpack:///./src/views/credit/minxins-lrylbtncontrolfalse.js","webpack:///./src/views/lottery-template/bingo-optional-template/bingo-optional-template.vue?96fa","webpack:///./src/views/credit/mixins/balls-reset.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","item","index","key","_v","_s","type","ball","innerIndex","class","selected","isSelected","on","$event","clickBall","label","renxuanMenuInfo","isSelectAll","selectAllNumber","calculateBetCounts","maxCount","$t","isSelectBig","selectBigNumber","isSelectSmall","selectSmallNumber","isSelectOdd","selectOddNumber","isSelectEven","selectEvenNumber","isSelectQuality","selectQualityNumber","isSelectComposite","selectCompositeNumber","clearNumber","staticRenderFns","data","computed","mapGetters","methods","mapActions","mapMutations","cb","max","numberList","map","itemInner","selectedArr","length","nowAddNumberIndex","Math","round","random","indexOf","push","addNumber","find","value","flagCount","ceil","isPrimeNum","created","mixins","props","numberAttrNameList","selectedCounts","$message","message","count","randIndex","nowNumbers","nowPrizesInfo","prizeLevel","innerArr","nowSelectNumber","$store","commit","betData","areaSplitChar","nowActiveWayInfoDetail","ballSplitChar","methodDetail","result","labelInfo","betCount","resetNumberList","getNumberListInfo","nowPlayWayInfo","rowTitles","i","showBtn","ylList","lrList","ballStrings","numberItem","split","ballValues","valIndex1","valIndex2","prizes","watch","getShoppingCarList","component","name","SET_LRYL_BTN","clearFlag"],"mappings":"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","file":"js/chunk-666bb4bb.d87f9f80.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"choice-number-list clear-fix\"},[_vm._l((_vm.numberList),function(item,index){return _c('li',{key:index,staticClass:\"clear-fix\"},[_c('div',{staticClass:\"top top_1\"},[_c('div',{staticClass:\"top\"},[_c('h4',[_vm._v(_vm._s(item.type))]),_c('div',{staticClass:\"balls clear-fix\"},_vm._l((item.numberList),function(ball,innerIndex){return _c('span',{key:innerIndex,staticClass:\"ball\",class:{ selected: ball.isSelected },on:{\"click\":function($event){return _vm.clickBall(ball, innerIndex)}}},[_vm._v(\" \"+_vm._s(ball.label)+\" \")])}),0)])])])}),_c('li',[_c('div',{staticClass:\"renxuan-menu\"},[_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectAll },on:{\"click\":function($event){return _vm.selectAllNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.whole\")))]),_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectBig },on:{\"click\":function($event){return _vm.selectBigNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.big\")))]),_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectSmall },on:{\"click\":function($event){return _vm.selectSmallNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.small\")))]),_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectOdd },on:{\"click\":function($event){return _vm.selectOddNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.odd\")))]),_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectEven },on:{\"click\":function($event){return _vm.selectEvenNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.even\")))]),_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectQuality },on:{\"click\":function($event){return _vm.selectQualityNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.quality\")))]),_c('span',{staticClass:\"select_balls_change\",class:{ 'now-hov': _vm.renxuanMenuInfo.isSelectComposite },on:{\"click\":function($event){return _vm.selectCompositeNumber(_vm.calculateBetCounts, _vm.maxCount)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.Composite\")))]),_c('span',{staticClass:\"select_balls_change\",on:{\"click\":function($event){return _vm.clearNumber(_vm.calculateBetCounts)}}},[_vm._v(_vm._s(_vm.$t(\"gameTemplate.clear\")))])])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { mapActions, mapMutations, mapGetters } from \"vuex\";\r\nimport { isPrimeNum } from \"../../../util\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      renxuanMenuInfo: {\r\n        isSelectAll: false,\r\n        isSelectBig: false,\r\n        isSelectSmall: false,\r\n        isSelectOdd: false,\r\n        isSelectEven: false,\r\n        isSelectQuality: false,\r\n        isSelectComposite: false\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"lotteryId\"])\r\n  },\r\n  methods: {\r\n    ...mapActions([]),\r\n    ...mapMutations([]),\r\n    selectAllNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 79 + 1);\r\n          if (selectedArr.indexOf(nowAddNumberIndex) === -1) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find(item => {\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectAll = !this.renxuanMenuInfo.isSelectAll;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectAll\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map(item => {\r\n          item.numberList.map(itemInner => {\r\n            if (this.renxuanMenuInfo.isSelectAll && flagCount >= max) {\r\n              return true;\r\n            }\r\n            itemInner.isSelected = this.renxuanMenuInfo.isSelectAll;\r\n            if (itemInner.isSelected) {\r\n              flagCount++;\r\n            }\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    selectBigNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 39 + 41);\r\n          if (selectedArr.indexOf(nowAddNumberIndex) === -1) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find((item, index) => {\r\n            if (index === 0) return;\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectBig = !this.renxuanMenuInfo.isSelectBig;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectBig\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map((item, index) => {\r\n          if (index < Math.ceil(this.numberList.length / 2)) {\r\n            item.numberList.map(itemInner => {\r\n              itemInner.isSelected = false;\r\n            });\r\n            return;\r\n          }\r\n          item.numberList.map(itemInner => {\r\n            if (this.renxuanMenuInfo.isSelectBig && flagCount >= max) {\r\n              return true;\r\n            }\r\n            itemInner.isSelected = this.renxuanMenuInfo.isSelectBig;\r\n            if (itemInner.isSelected) {\r\n              flagCount++;\r\n            }\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    selectSmallNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 39 + 1);\r\n          if (selectedArr.indexOf(nowAddNumberIndex) === -1) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find(item => {\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectSmall = !this.renxuanMenuInfo\r\n          .isSelectSmall;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectSmall\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map((item, index) => {\r\n          if (index >= Math.ceil(this.numberList.length / 2)) {\r\n            item.numberList.map(itemInner => {\r\n              itemInner.isSelected = false;\r\n            });\r\n            return;\r\n          }\r\n          item.numberList.map(itemInner => {\r\n            if (this.renxuanMenuInfo.isSelectSmall && flagCount >= max) {\r\n              return true;\r\n            }\r\n            itemInner.isSelected = this.renxuanMenuInfo.isSelectSmall;\r\n            if (itemInner.isSelected) flagCount++;\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    selectOddNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 79 + 1);\r\n          if (\r\n            selectedArr.indexOf(nowAddNumberIndex) === -1 &&\r\n            nowAddNumberIndex % 2 !== 0\r\n          ) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find(item => {\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectOdd = !this.renxuanMenuInfo.isSelectOdd;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectOdd\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map(item => {\r\n          item.numberList.map(itemInner => {\r\n            if (itemInner.value % 2 !== 0) {\r\n              if (this.renxuanMenuInfo.isSelectOdd && flagCount >= max) {\r\n                return true;\r\n              }\r\n              itemInner.isSelected = this.renxuanMenuInfo.isSelectOdd;\r\n              if (itemInner.isSelected) flagCount++;\r\n              return true;\r\n            }\r\n            itemInner.isSelected = false;\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    selectEvenNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 79 + 1);\r\n          if (\r\n            selectedArr.indexOf(nowAddNumberIndex) === -1 &&\r\n            nowAddNumberIndex % 2 === 0\r\n          ) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find(item => {\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectEven = !this.renxuanMenuInfo.isSelectEven;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectEven\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map(item => {\r\n          item.numberList.map(itemInner => {\r\n            if (itemInner.value % 2 === 0) {\r\n              if (this.renxuanMenuInfo.isSelectEven && flagCount >= max) {\r\n                return true;\r\n              }\r\n              itemInner.isSelected = this.renxuanMenuInfo.isSelectEven;\r\n              if (itemInner.isSelected) flagCount++;\r\n              return true;\r\n            }\r\n            itemInner.isSelected = false;\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    selectQualityNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 79 + 1);\r\n          if (\r\n            selectedArr.indexOf(nowAddNumberIndex) === -1 &&\r\n            isPrimeNum(nowAddNumberIndex)\r\n          ) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find(item => {\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectQuality = !this.renxuanMenuInfo\r\n          .isSelectQuality;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectQuality\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map(item => {\r\n          item.numberList.map(itemInner => {\r\n            if (isPrimeNum(itemInner.value)) {\r\n              if (this.renxuanMenuInfo.isSelectQuality && flagCount >= max) {\r\n                return true;\r\n              }\r\n              itemInner.isSelected = this.renxuanMenuInfo.isSelectQuality;\r\n              if (itemInner.isSelected) flagCount++;\r\n              return true;\r\n            }\r\n            itemInner.isSelected = false;\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    selectCompositeNumber(cb, max) {\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (max) {\r\n        const selectedArr = [];\r\n        while (selectedArr.length < max) {\r\n          const nowAddNumberIndex = Math.round(Math.random() * 79 + 1);\r\n          if (\r\n            selectedArr.indexOf(nowAddNumberIndex) === -1 &&\r\n            !isPrimeNum(nowAddNumberIndex)\r\n          ) {\r\n            selectedArr.push(nowAddNumberIndex);\r\n          }\r\n        }\r\n        selectedArr.map(addNumber => {\r\n          return this.numberList.find(item => {\r\n            return item.numberList.find(itemInner => {\r\n              if (itemInner.value === addNumber) {\r\n                itemInner.isSelected = true;\r\n                return true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        let flagCount = 0;\r\n        this.renxuanMenuInfo.isSelectComposite = !this.renxuanMenuInfo\r\n          .isSelectComposite;\r\n        for (let key in this.renxuanMenuInfo) {\r\n          if (key === \"isSelectComposite\") continue;\r\n          this.renxuanMenuInfo[key] = false;\r\n        }\r\n        this.numberList.map(item => {\r\n          item.numberList.map(itemInner => {\r\n            if (!isPrimeNum(itemInner.value) && itemInner.value !== 1) {\r\n              if (this.renxuanMenuInfo.isSelectComposite && flagCount >= max) {\r\n                return true;\r\n              }\r\n              itemInner.isSelected = this.renxuanMenuInfo.isSelectComposite;\r\n              if (itemInner.isSelected) flagCount++;\r\n              return true;\r\n            }\r\n            itemInner.isSelected = false;\r\n          });\r\n        });\r\n      }\r\n      if (cb) cb();\r\n    },\r\n    clearNumber(cb) {\r\n      for (let key in this.renxuanMenuInfo) {\r\n        this.renxuanMenuInfo[key] = false;\r\n      }\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n      if (cb) cb();\r\n    }\r\n  },\r\n  created() {}\r\n};\r\n","<template>\r\n  <ul class=\"choice-number-list clear-fix\">\r\n    <li v-for=\"(item, index) in numberList\" class=\"clear-fix\" :key=\"index\">\r\n      <div class=\"top top_1\">\r\n        <div class=\"top\">\r\n          <h4>{{ item.type }}</h4>\r\n          <div class=\"balls clear-fix\">\r\n            <span\r\n              class=\"ball\"\r\n              v-for=\"(ball, innerIndex) in item.numberList\"\r\n              :class=\"{ selected: ball.isSelected }\"\r\n              @click=\"clickBall(ball, innerIndex)\"\r\n              :key=\"innerIndex\"\r\n            >\r\n              {{ ball.label }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li>\r\n      <div class=\"renxuan-menu\">\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectAll }\"\r\n          @click=\"selectAllNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.whole\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectBig }\"\r\n          @click=\"selectBigNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.big\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectSmall }\"\r\n          @click=\"selectSmallNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.small\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectOdd }\"\r\n          @click=\"selectOddNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.odd\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectEven }\"\r\n          @click=\"selectEvenNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.even\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectQuality }\"\r\n          @click=\"selectQualityNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.quality\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          :class=\"{ 'now-hov': renxuanMenuInfo.isSelectComposite }\"\r\n          @click=\"selectCompositeNumber(calculateBetCounts, maxCount)\"\r\n          >{{ $t(\"gameTemplate.Composite\") }}</span\r\n        >\r\n        <span\r\n          class=\"select_balls_change\"\r\n          @click=\"clearNumber(calculateBetCounts)\"\r\n          >{{ $t(\"gameTemplate.clear\") }}</span\r\n        >\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport kenoMixins from \"../../credit/mixins/keno_mixin\";\r\nimport resetBalls from \"../../credit/mixins/balls-reset\";\r\nimport {\r\n  SET_SSC_SELECTED_COUNTS,\r\n  SET_HIGHEST_PRIZE_LEVEL,\r\n  SET_SELECTED_LINE_COUNTS\r\n} from \"../../../store/nameSpace\";\r\nimport { mapGetters } from \"vuex\";\r\nimport minxinsLrylBtnControl from \"../../credit/minxins-lrylbtncontrolfalse\";\r\n// 引入核心的算法文件\r\nimport { checkLotteryCounts, sortNumber } from \"../../../common/js/LotteryBet\";\r\n\r\nexport default {\r\n  mixins: [kenoMixins, resetBalls, minxinsLrylBtnControl],\r\n  props: [\"flagCount\", \"getShoppingCarList\", \"nowActiveWayInfoDetail\"],\r\n  data() {\r\n    return {\r\n      numberList: [],\r\n      numberAttrNameList: [\r\n        \"isSelectAll\",\r\n        \"isSelectBig\",\r\n        \"isSelectSmall\",\r\n        \"isSelectOdd\",\r\n        \"isSelectEven\"\r\n      ],\r\n      selectedCounts: 0,\r\n      maxCount: 0\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"showYlPlay\", \"showLrPlay\"])\r\n  },\r\n  methods: {\r\n    clickBall(ball, innerIndex) {\r\n      let flagCount = 0;\r\n      this.numberList.map(item => {\r\n        item.numberList.map(itemInner => {\r\n          if (itemInner.isSelected) flagCount++;\r\n        });\r\n      });\r\n      if (flagCount >= this.maxCount && !ball.isSelected) {\r\n        this.$message({\r\n          message: this.$t(\"errorMessage.errorMessage14\"),\r\n          type: \"error\"\r\n        });\r\n        return;\r\n      }\r\n      ball.isSelected = !ball.isSelected;\r\n      this.calculateBetCounts(innerIndex);\r\n    },\r\n    calculateBetCounts(innerIndex) {\r\n      const nowSelectNumber = [];\r\n      const nowPrizesInfo = [];\r\n      const innerArr = [];\r\n      this.numberList.map(item => {\r\n        const nowNumbers = item.numberList.length - 1;\r\n        let count = 0;\r\n        item.numberList.map(itemInner => {\r\n          if (itemInner.isSelected) {\r\n            count++;\r\n          }\r\n        });\r\n\r\n        // 每行最大注数的选择拦截\r\n        item.numberList.map(() => {\r\n          if (count > this.nowActiveWayInfoDetail[\"ball_limits\"]) {\r\n            count--;\r\n            let randIndex = Math.round(Math.random() * nowNumbers);\r\n            while (\r\n              innerIndex === randIndex ||\r\n              !item.numberList[randIndex].isSelected\r\n            ) {\r\n              randIndex = Math.round(Math.random() * nowNumbers);\r\n            }\r\n            item.numberList[randIndex].isSelected = false;\r\n          }\r\n        });\r\n        item.numberList.map(itemInner => {\r\n          if (itemInner.isSelected) {\r\n            nowPrizesInfo.push(+itemInner.prizeLevel);\r\n            innerArr.push(itemInner);\r\n          }\r\n        });\r\n        nowSelectNumber.push(innerArr);\r\n      });\r\n\r\n      // 重置状态管理中的最高奖级信息\r\n      if (nowPrizesInfo.length) {\r\n        this.$store.commit(\r\n          SET_HIGHEST_PRIZE_LEVEL,\r\n          `${Math.min.apply(this, nowPrizesInfo)}`\r\n        );\r\n      } else {\r\n        this.$store.commit(SET_HIGHEST_PRIZE_LEVEL, ``);\r\n      }\r\n\r\n      const result = checkLotteryCounts({\r\n        // 用户选择的数字\r\n        betData: nowSelectNumber.map(item =>\r\n          item.map(itemInner => itemInner.value)\r\n        ),\r\n        areaSplitChar: this.nowActiveWayInfoDetail[\"area_split_char\"],\r\n        ballSplitChar: this.nowActiveWayInfoDetail[\"ball_split_char\"],\r\n        methodDetail: this.nowActiveWayInfoDetail[\"count_function\"]\r\n      });\r\n      result.labelInfo = sortNumber(\r\n        this.nowActiveWayInfoDetail[\"area_split_char\"],\r\n        this.nowActiveWayInfoDetail[\"ball_split_char\"],\r\n        nowSelectNumber.map(item => item.map(itemInner => itemInner.label))\r\n      );\r\n      this.selectedCounts = result.betCount;\r\n      this.$store.commit(SET_SELECTED_LINE_COUNTS, result.selectLineCounts);\r\n      this.$store.commit(SET_SSC_SELECTED_COUNTS, this.selectedCounts);\r\n      return result;\r\n    },\r\n    resetNumberList() {\r\n      this.renxuanMenuInfo.isSelectAll = false;\r\n      this.renxuanMenuInfo.isSelectBig = false;\r\n      this.renxuanMenuInfo.isSelectSmall = false;\r\n      this.renxuanMenuInfo.isSelectOdd = false;\r\n      this.renxuanMenuInfo.isSelectEven = false;\r\n      this.renxuanMenuInfo.isSelectQuality = false;\r\n      this.renxuanMenuInfo.isSelectComposite = false;\r\n      this.numberList.map(item => {\r\n        item.isSelectAll = false;\r\n        item.isSelectBig = false;\r\n        item.isSelectSmall = false;\r\n        item.isSelectOdd = false;\r\n        item.isSelectEven = false;\r\n        item.numberList.map(itemInner => {\r\n          itemInner.isSelected = false;\r\n        });\r\n      });\r\n    },\r\n    // 将数据更新为配置文件中的相关数据\r\n    getNumberListInfo() {\r\n      this.numberList = [];\r\n      const nowPlayWayInfo = this.nowActiveWayInfoDetail;\r\n      if (\r\n        !nowPlayWayInfo ||\r\n        !nowPlayWayInfo[\"ball_strings\"] ||\r\n        !nowPlayWayInfo[\"ball_values\"]\r\n      )\r\n        return false;\r\n      const plateRows = nowPlayWayInfo[\"plat_rows\"];\r\n\r\n      // 获取到配置文件中需要显示label值\r\n      let ballStrings = nowPlayWayInfo[\"ball_strings\"].split(\"|\");\r\n\r\n      // 获取到配置文件中显示值对应的value\r\n      let ballValues = nowPlayWayInfo[\"ball_values\"].split(\"|\");\r\n\r\n      // 获取到配置文件中对应显示的title\r\n      let rowTitles = nowPlayWayInfo[\"row_titles\"].split(\",\");\r\n\r\n      // 获取当前菜单详情的奖级信息\r\n      let prizes = nowPlayWayInfo[\"ball_prize_levels\"].split(\",\");\r\n\r\n      // 获取当前可选择的最大球数\r\n      this.maxCount = +nowPlayWayInfo[\"ball_limits\"];\r\n      for (let i = 0; i < plateRows; i++) {\r\n        this.numberList.push({\r\n          type: rowTitles[i],\r\n          showBtn: false,\r\n          isSelectAll: false,\r\n          isSelectBig: false,\r\n          isSelectSmall: false,\r\n          isSelectOdd: false,\r\n          isSelectEven: false,\r\n          numberList: [],\r\n          ylList: [],\r\n          lrList: []\r\n        });\r\n      }\r\n      ballStrings = ballStrings.map(numberItem => {\r\n        return numberItem.split(\",\");\r\n      });\r\n      ballValues = ballValues.map(numberItem => {\r\n        return numberItem.split(\",\");\r\n      });\r\n      this.numberList.map((item, index) => {\r\n        item.type = rowTitles[index];\r\n        let valIndex1 = 0;\r\n        for (let i = 0; i < ballStrings[valIndex1].length; i++) {\r\n          let valIndex2 = index * ballStrings[valIndex1].length + i;\r\n          item.numberList.push({\r\n            isSelected: false,\r\n            label: ballStrings[index][i],\r\n            value: +ballValues[valIndex1][valIndex2],\r\n            prizeLevel: prizes[i] ? prizes[i] : `1`\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    flagCount() {\r\n      const result = this.calculateBetCounts();\r\n      if (result.result !== 0) {\r\n        return this.getShoppingCarList(false, false, 0);\r\n      }\r\n      this.getShoppingCarList(\r\n        result.numberStr,\r\n        this.selectedCounts,\r\n        undefined,\r\n        result.labelInfo\r\n      );\r\n    },\r\n    nowActiveWayInfoDetail() {\r\n      this.getNumberListInfo();\r\n    }\r\n  },\r\n  created() {\r\n    this.getNumberListInfo();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../statics/css/plate.css\";\r\n@import \"../statics/css/hezhi-type-repeat.css\";\r\n@import \"../statics/css/renxuan-menu.css\";\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bingo-optional-template.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bingo-optional-template.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bingo-optional-template.vue?vue&type=template&id=9cbb1c66&scoped=true&\"\nimport script from \"./bingo-optional-template.vue?vue&type=script&lang=js&\"\nexport * from \"./bingo-optional-template.vue?vue&type=script&lang=js&\"\nimport style0 from \"./bingo-optional-template.vue?vue&type=style&index=0&id=9cbb1c66&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9cbb1c66\",\n  null\n  \n)\n\nexport default component.exports","import { mapGetters } from \"vuex\";\r\nimport { SET_LRYL_BTN } from \"../../store/nameSpace\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"lrylBtnControlfalse\"\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"lrylBtnControl\", \"isShowMenuBtnsInHezhi\"])\r\n  },\r\n  created() {\r\n    this.$store.commit(SET_LRYL_BTN, false);\r\n  }\r\n};\r\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bingo-optional-template.vue?vue&type=style&index=0&id=9cbb1c66&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bingo-optional-template.vue?vue&type=style&index=0&id=9cbb1c66&scoped=true&lang=css&\"","import { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  props: [\"nowPlayWayInfo\"],\r\n  computed: {\r\n    ...mapGetters([\"clearFlag\"])\r\n  },\r\n  watch: {\r\n    clearFlag() {\r\n      this.resetNumberList();\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}